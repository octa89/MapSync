<Application x:Class="WpfMapApp1.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="Application_Startup">
    <Application.Resources>

        <!-- Red Brick Dark theme brushes -->
        <LinearGradientBrush x:Key="Brush.Background" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#2D1B1B" Offset="0"/>
            <GradientStop Color="#4A2C2C" Offset="0.5"/>
            <GradientStop Color="#5C3A3A" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.Surface" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#6B4C4C" Offset="0"/>
            <GradientStop Color="#8B5A5A" Offset="0.5"/>
            <GradientStop Color="#A66B6B" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Brush.SurfaceAlt" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#5C3A3A" Offset="0"/>
            <GradientStop Color="#7A4D4D" Offset="0.5"/>
            <GradientStop Color="#965E5E" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Brush.Text" Color="#2F2F2F"/>
        <SolidColorBrush x:Key="Brush.Subtext" Color="#555555"/>
        <!-- For compatibility with any light components explicitly styled -->
        <LinearGradientBrush x:Key="Brush.LightSurface" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#8B5A5A" Offset="0"/>
            <GradientStop Color="#A66B6B" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Brush.OnLightText" Color="#2F2F2F"/>
        <LinearGradientBrush x:Key="Brush.Accent" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#CD853F" Offset="0"/>
            <GradientStop Color="#B8860B" Offset="0.5"/>
            <GradientStop Color="#DAA520" Offset="1"/>
        </LinearGradientBrush>

        <!-- App bar (red brick dark) -->
        <LinearGradientBrush x:Key="Brush.AppBarBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#4A2C2C" Offset="0"/>
            <GradientStop Color="#5C3A3A" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Brush.AppBarText" Color="#2F2F2F"/>
        <!-- Menu text (dark gray on dark bar) -->
        <SolidColorBrush x:Key="Brush.MenuText" Color="#2F2F2F"/>


        <!-- Global background brush (red brick gradient) -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#2D1B1B" Offset="0"/>
            <GradientStop Color="#4A2C2C" Offset="0.5"/>
            <GradientStop Color="#5C3A3A" Offset="1"/>
        </LinearGradientBrush>

        <!-- Implicit Window style, *based on* the default -->
        <Style TargetType="Window"  
         BasedOn="{StaticResource {x:Type Window}}">
            <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        </Style>

        <!-- Global style for TextBlocks -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>

        <!-- Style for custom callouts (borders) -->
        <Style x:Key="CustomCalloutStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
            <Setter Property="BorderBrush" Value="#CBD5E1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="MaxHeight" Value="200"/>
        </Style>

        <!-- Global style for CheckBoxes -->
        <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
            <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        </Style>

        <!-- Global style for TextBoxes -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#8B5A5A" Offset="0"/>
                        <GradientStop Color="#A66B6B" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#2F2F2F"/>
            <Setter Property="BorderBrush" Value="#CD853F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <!-- Global style for PasswordBoxes -->
        <Style TargetType="PasswordBox">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#8B5A5A" Offset="0"/>
                        <GradientStop Color="#A66B6B" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#2F2F2F"/>
            <Setter Property="BorderBrush" Value="#CD853F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <!-- Global style for Buttons -->
        <Style TargetType="Button">
            <Setter Property="Foreground" Value="#2F2F2F"/>
            <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderBrush" Value="#CD853F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                            TextElement.Foreground="{TemplateBinding Foreground}"
                                            TextElement.FontWeight="{TemplateBinding FontWeight}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#B8860B" Offset="0"/>
                                <GradientStop Color="#DAA520" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Circular FAB style -->
        <Style x:Key="FabButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="44"/>
            <Setter Property="Height" Value="44"/>
            <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="22">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Global style for all ComboBoxes -->
        <Style TargetType="ComboBox">
            <!-- Base properties -->
            <Setter Property="Foreground" Value="#2F2F2F"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#8B5A5A" Offset="0"/>
                        <GradientStop Color="#A66B6B" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#CD853F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <!-- ToggleButton is shown when combo is collapsed -->
                            <ToggleButton Name="ToggleButton"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"
                                          Focusable="False">
                                <!-- CRITICAL FIX:
                                     Bind ContentPresenter to SelectionBoxItem so DisplayMemberPath works -->
                                <ContentPresenter Margin="4"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"/>
                            </ToggleButton>

                            <!-- The Popup hosts items when expanded -->
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{StaticResource Brush.Surface}">
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <!-- ItemsPresenter is where ComboBox items go -->
                                            <StackPanel IsItemsHost="True" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#EEE"/>
                                <Setter TargetName="ToggleButton" Property="Foreground" Value="#888"/>
                            </Trigger>
                            <!-- If there are no items, force a small dropdown height -->
                            <Trigger Property="HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <!-- If popup is transparent, add corner radius -->
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                                <Setter TargetName="DropDownBorder" Property="SnapsToDevicePixels" Value="True"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!-- Style for each dropdown item -->
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Foreground" Value="#2F2F2F"/>
                        <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
                        <Setter Property="FontFamily" Value="Segoe UI"/>
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Padding" Value="4"/>
                        <Style.Triggers>
                            <!-- Hover -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#B8860B" Offset="0"/>
                                            <GradientStop Color="#DAA520" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Foreground" Value="#2F2F2F"/>
                            </Trigger>
                            <!-- Selected item highlight -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource Brush.Accent}"/>
                                <Setter Property="Foreground" Value="#2F2F2F"/>
                            </Trigger>
                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#999999"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Special white text checkbox style -->
        <Style x:Key="WhiteTextCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="ExtraBlack"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border" Grid.Column="0" Width="16" Height="16" 
                                    Background="{StaticResource Brush.Surface}" 
                                    BorderBrush="#CD853F" BorderThickness="2" CornerRadius="3" 
                                    VerticalAlignment="Center" Margin="0,0,6,0">
                                <Path x:Name="CheckMark" Visibility="Collapsed" 
                                      Data="M 0 3 L 3 6 L 8 1" Stroke="White" StrokeThickness="2"/>
                            </Border>
                            <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" 
                                     Foreground="White" FontWeight="ExtraBlack" FontSize="12"
                                     VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Special white text button style for Launch POSM -->
        <Style x:Key="WhiteTextButton" TargetType="Button">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource Brush.Surface}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#CD853F"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="8">
                            <TextBlock Text="{TemplateBinding Content}"
                                     HorizontalAlignment="Center" 
                                     VerticalAlignment="Center"
                                     Foreground="White"
                                     FontWeight="Bold"
                                     FontFamily="{TemplateBinding FontFamily}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#B8860B" Offset="0"/>
                                <GradientStop Color="#DAA520" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Global style for Menu and MenuItem to make text white -->
        <Style TargetType="Menu">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="White"/>
        </Style>

    </Application.Resources>
</Application>
